{"version":3,"sources":["components/Form.js","components/Card.js","components/CardsPage.js","App.js","reportWebVitals.js","index.js"],"names":["Option","props","className","type","checked","isSelected","onChange","label","Form","handleChange","event","setState","optionSelected","console","log","state","allActivities","parkKey","axios","get","then","res","data","activities","test","map","item","push","name","value","id","this","options","isMulti","menuIsOpen","hideSelectedOptions","components","allowSelectAll","to","pathname","Component","Card","getParkInfo","results","nationalParks","parkCode","parkName","fullName","parkLocation","addresses","city","stateCode","parkDescription","description","parkImgUrl","images","url","parkDirections","directionsInfo","parkUrl","image","parkImages","caption","parkFees","trigger","modal","nested","close","onClick","time","width","height","captionStyle","radius","slideNumber","slideNumberStyle","captionPosition","automatic","dots","pauseIconColor","pauseIconSize","slideBackgroundColor","slideImageFit","thumbnails","thumbnailWidth","style","textAlign","maxWidth","maxHeight","margin","href","fontSize","fontWeight","CardsPage","getParkCodes","parks","park","nationalParksList","includes","code","handleActivityChange","e","activityName","target","activityList","uniqueParks","Array","from","Set","activity","App","path","exact","component","Home","Parks","location","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4b44fc3.chunk.js","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { default as ReactSelect } from \"react-select\";\nimport { components } from \"react-select\";\nimport './Form.css';\nimport { Link } from \"react-router-dom\";\n\nimport axios from 'axios';\n\nconst Option = (props) => {\n    return (\n        <div className=\"options\">\n            <components.Option {...props}>\n                <input\n                    type=\"checkbox\"\n                    checked={props.isSelected}\n                    onChange={() => null}\n                />{\" \"}\n                <label>{props.label}</label>\n            </components.Option>\n        </div>\n    );\n};\nexport default class Form extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            allActivities: [],\n            optionSelected: [],\n            parkKey: \"acad\"\n        };\n    }\n\n    componentDidMount() {\n        axios.get(`https://developer.nps.gov/api/v1/activities?api_key=5jlLN2KHagMnCMgIsGd7R1bqv08XJowk4eIGRMxq`)\n            .then(res => {\n                console.log(res.data);\n                let activities = res.data.data;\n                console.log(activities[0]);\n                let test = [];\n                activities.map(function (item) {\n                    test.push({ label: item.name, value: item.id });\n                })\n                console.log(test);\n                this.setState({ allActivities: test });\n                console.log(\"line 53 \" + this.state.allActivities[12].label);\n            })\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            optionSelected: event\n        });\n        console.log(event);\n    };\n\n    render() {\n        console.log(\"line 121 \" + this.state.allActivities[12]);\n        return (\n            <div>\n                <div >\n                    <div className=\"form\">\n                        <span>\n                            <ReactSelect\n                                options={this.state.allActivities}\n                                isMulti\n                                menuIsOpen={true}\n                                hideSelectedOptions={true}\n                                components={{\n                                    Option\n                                }}\n                                onChange={this.handleChange}\n                                allowSelectAll={true}\n                                value={this.state.optionSelected}\n                            />\n                        </span>\n                    </div>\n                    <div>\n                        <Link to={{\n                            pathname: \"/national-park-activity-finder/Parks\",\n                            state: this.state.optionSelected\n                        }}>\n                            <button className=\"b1\">See National Parks</button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport \"./Card.css\";\nimport Popup from 'reactjs-popup';\nimport \"./PopUp.css\";\nimport { Carousel } from 'react-carousel-minimal';\nimport axios from 'axios';\n\nexport default class Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            parkKey: props.parkKey,\n            parkName: \"API Call Not Complete\",\n            parkLocation: \"More Information Not Available\",\n            parkDescription: \"Information Not Available\",\n            parkFees: [],\n            parkDirections: \"\",\n            parkUrl: \"\",\n            parkImages: []\n        }\n    }\n\n    componentDidMount() {\n        this.getParkInfo(this.state.parkKey);\n    }\n\n    getParkInfo = (props) => {\n        console.log(\"running\")\n        console.log(props);\n        axios.get('https://developer.nps.gov/api/v1/parks?parkCode=' + { props } + '&api_key=5jlLN2KHagMnCMgIsGd7R1bqv08XJowk4eIGRMxq')\n            .then(res => {\n                const results = res.data.data;\n                console.log(results);\n                results.map((nationalParks) => {\n                    if (nationalParks.parkCode == props) {\n                        this.setState({\n                            parkName: nationalParks.fullName,\n                            parkLocation: nationalParks.addresses[0].city + \", \" + nationalParks.addresses[0].stateCode,\n                            parkDescription: nationalParks.description,\n                            parkImgUrl: nationalParks.images[0].url,\n                            // parkImages: nationalParks.images,\n                            parkDirections: nationalParks.directionsInfo,\n                            parkUrl: nationalParks.url,\n                            \n                        })\n                        nationalParks.images.map(image => {\n                            // this.setState(...this.state.parkImages, {image: image.url, caption: image.caption})\n                            this.state.parkImages.push({image: image.url, caption: image.caption});\n                        })\n                        console.log(this.state.parkImages);\n                    }\n                })\n\n            })\n    }\n    \n    render() {\n        return (\n            <div >\n                <div className=\"Card\">\n                    <h2>{this.state.parkName}</h2>\n                    <p>{this.state.parkLocation}</p>\n                    <div className=\"PopUpBackground\">\n                        <Popup\n                            trigger={<button className=\"button\"> Click for More Info </button>}\n                            modal\n                            nested\n                            className=\"popup\"\n                        >\n                            {close => (\n                                <div className=\"modal\">\n                                    <button className=\"close\" onClick={close}>\n                                        &times;\n                                    </button>\n                                    <div className=\"header\"> {this.state.parkName} </div>\n                                    <div className=\"content\">\n                                        {this.state.parkDescription}\n                                    </div>\n                                    <div>\n                                        <Carousel\n                                            data={this.state.parkImages}\n                                            time={2000}\n                                            width=\"350px\"\n                                            height=\"200px\"\n                                            captionStyle={captionStyle}\n                                            radius=\"10px\"\n                                            slideNumber={true}\n                                            slideNumberStyle={slideNumberStyle}\n                                            captionPosition=\"bottom\"\n                                            automatic={true}\n                                            dots={true}\n                                            pauseIconColor=\"white\"\n                                            pauseIconSize=\"40px\"\n                                            slideBackgroundColor=\"darkgrey\"\n                                            slideImageFit=\"cover\"\n                                            thumbnails={true}\n                                            thumbnailWidth=\"100px\"\n                                            style={{\n                                                textAlign: \"center\",\n                                                maxWidth: \"850px\",\n                                                maxHeight: \"500px\",\n                                                margin: \"20px\",\n                                            }}\n                                        />\n                                        <div className=\"directions\">\n                                            <b>Directions: </b>{this.state.parkDirections}\n                                        </div>\n                                        <div className=\"url\">\n                                            <a href={this.state.parkUrl}>Navigate to {this.state.parkName} Website</a>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"actions\">\n                                    </div>\n                                </div>\n                            )}\n                        </Popup>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst captionStyle = {\n    fontSize: '14px',\n    fontWeight: 'bold',\n  }\nconst slideNumberStyle = {\n    fontSize: '10px',\n    fontWeight: 'bold',\n  }","import React, { Component } from \"react\";\nimport Card from './Card';\nimport '../App.css';\nimport './CardsPage.css';\n\nimport axios from 'axios';\n\nexport default class CardsPage extends Component {\n\n    constructor(props) {\n\n        super(props);\n        console.log(props.props);\n        this.state = {\n            nationalParksList: [],\n            activityName: \"\",\n            activityList: props.props,\n        };\n    }\n\n    getParkCodes = (props) => {\n        console.log(\"running\")\n        console.log(props);\n        if (props != \"Select an Activity\") {\n            axios.get('https://developer.nps.gov/api/v1/activities/parks?q=' + props +\n                '&api_key=5jlLN2KHagMnCMgIsGd7R1bqv08XJowk4eIGRMxq')\n                .then(res => {\n                    const results = res.data.data;\n                    results.map((nationalParks) => {\n                        const allParks = nationalParks.parks;\n                        allParks.map((park) => {\n                            if (!this.state.nationalParksList.includes(park.parkCode)) {\n                                this.handleChange(park.parkCode);\n                            }\n                        })\n\n                    })\n\n                })\n        }\n\n    }\n\n    handleChange = (code) => {\n        this.setState({\n            nationalParksList: [...this.state.nationalParksList, code],\n        });\n    };\n\n    handleActivityChange = (e) => {\n        this.setState({\n            nationalParksList: [],\n        })\n        this.setState({\n            activityName: e.target.value, \n        })\n    };\n\n    render() {\n        console.log(\"In render\");\n        console.log(this.state.activityList);\n        this.getParkCodes(this.state.activityName);\n        const uniqueParks = Array.from(new Set(this.state.nationalParksList));\n        return (\n            <div className=\"Parks\">\n                <header className=\"bg-image\">\n                    <h1 className=\"title\">National Park Activity Finder</h1>\n                </header>\n                <div className = \"dropdown-container\">\n                    <select className=\"dropdown\" onChange = {this.handleActivityChange}>\n                        <option value=\"Select an Activity\"> -- Select an Activity -- </option>\n                        {this.state.activityList.map((activity) => <option value={activity.label}>{activity.label}</option>)}\n                    </select>\n                </div>\n                <p className = \"caution\"> <b>Caution:</b> May take a few seconds for data to load after selecting</p>\n                <div className=\"grid-container\">\n                    {\n                        uniqueParks.map((parkKey) => {\n                            return (\n                                <Card className=\"grid-item\" parkKey={parkKey} />\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport CardsPage from './components/CardsPage';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/national-park-activity-finder/\" exact component={Home} />\n        <Route path=\"/national-park-activity-finder/Parks\" component={Parks} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default App;\n\nconst Home = () => {\n  return (\n    <div className=\"Home\">\n      <h1 className=\"title\">National Park Activity Finder</h1>\n      <div >\n        <Form />\n      </div>\n    </div>\n  )\n}\n\nconst Parks = (props) => {\n  return (\n    <div>\n      <CardsPage props = {props.location.state}/>    \n    </div>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}